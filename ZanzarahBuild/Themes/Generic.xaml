<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ZanzarahBuild.Views.CustomControls"
    xmlns:zanzarah="clr-namespace:ZanzarahBuild.Views.CustomControls.Zanzarah"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ZanzarahBuild;component/ResourceDictionaries/ControlsResourceDictionary.xaml"/>
        <ResourceDictionary Source="/ZanzarahBuild;component/ResourceDictionaries/TextResourceDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="{x:Type local:CustomButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
    </Style>


    <Style TargetType="{x:Type local:CustomToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
    </Style>


    <Style TargetType="{x:Type local:CustomRepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
    </Style>




    <Style TargetType="{x:Type local:ZanzarahComboBoxToggleButton}">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <ContentControl Template="{StaticResource Arrow.Down.Default}" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <ContentControl Template="{StaticResource ControlBackground.Default}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <ContentControl Template="{StaticResource Arrow.Down.Highlighted}" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                <ContentControl Template="{StaticResource ControlBackground.Blue}"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <ContentControl Template="{StaticResource Arrow.Up.Default}" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                <ContentControl Template="{StaticResource ControlBackground.Default}"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <ContentControl Template="{StaticResource Arrow.Up.Highlighted}" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                <ContentControl Template="{StaticResource ControlBackground.Blue}"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <ContentControl Template="{StaticResource Arrow.Down.Default}" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                <ContentControl Template="{StaticResource ControlBackground.Default}"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- zanzarah -->


    <Style TargetType="{x:Type zanzarah:ZanzarahArrowUpButton}">
        <Setter Property="Template" Value="{StaticResource Arrow.Up.Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Up.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Up.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource Arrow.Up.Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type zanzarah:ZanzarahArrowDownButton}">
        <Setter Property="Template" Value="{StaticResource Arrow.Down.Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Down.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Down.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource Arrow.Down.Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type zanzarah:ZanzarahArrowLeftButton}">
        <Setter Property="Template" Value="{StaticResource Arrow.Left.Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Left.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Left.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource Arrow.Left.Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type zanzarah:ZanzarahArrowRightButton}">
        <Setter Property="Template" Value="{StaticResource Arrow.Right.Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Right.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Right.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource Arrow.Right.Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type zanzarah:ZanzarahThumb}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template" Value="{StaticResource Thumb.Default}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}" Value="True">
                <Setter Property="Template" Value="{StaticResource Thumb.Highlighted}"/>
            </DataTrigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Template" Value="{StaticResource Thumb.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource Thumb.Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type zanzarah:ZanzarahSmallThumb}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template" Value="{StaticResource SmallThumb.Default}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}" Value="True">
                <Setter Property="Template" Value="{StaticResource SmallThumb.Highlighted}"/>
            </DataTrigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Template" Value="{StaticResource SmallThumb.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource SmallThumb.Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="zanzarah:ZanzarahScrollBar">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahScrollBar">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="25" Tag="{Binding ElementName=PART_Track, Path=IsMouseOver}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="39"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="39"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1,0">
                            <Border Background="Black" BorderBrush="{StaticResource ScrollBar.Background.Brush.Vertical}" BorderThickness="1,0,1,1"/>
                        </Border>
                        <zanzarah:ZanzarahArrowUpButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}"
                                                        IsEnabled="{TemplateBinding IsMouseOver}" VerticalAlignment="Bottom"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" ViewportSize="NaN">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" Width="21"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" Width="21"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <zanzarah:ZanzarahThumb x:Name="PART_Thumb"/>
                            </Track.Thumb>
                        </Track>
                        <zanzarah:ZanzarahArrowDownButton x:Name="PART_LineDownButton" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}"
                                                          IsEnabled="{TemplateBinding IsMouseOver}" VerticalAlignment="Top"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="zanzarah:ZanzarahScrollBar">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Height="25" IsHitTestVisible="True" Tag="{Binding ElementName=PART_Track, Path=IsMouseOver}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="39"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="39"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="1" BorderBrush="Black" BorderThickness="0,1" IsHitTestVisible="True">
                                    <Border Background="Black" BorderBrush="{StaticResource ScrollBar.Background.Brush.Horizontal}" BorderThickness="1,1,0,1" IsHitTestVisible="True"/>
                                </Border>
                                <zanzarah:ZanzarahArrowLeftButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}"
                                                                  IsEnabled="{TemplateBinding IsMouseOver}" HorizontalAlignment="Right"/>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}" ViewportSize="NaN">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" Height="21"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" Height="21"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <zanzarah:ZanzarahThumb x:Name="PART_Thumb"/>
                                    </Track.Thumb>
                                </Track>
                                <zanzarah:ZanzarahArrowRightButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                                                   IsEnabled="{TemplateBinding IsMouseOver}" HorizontalAlignment="Left"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="zanzarah:ZanzarahScrollViewer">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahScrollViewer">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <ContentControl Template="{StaticResource Box.Background}"/>
                            <Grid Margin="2" Background="{TemplateBinding Background}">
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Grid>
                            <Grid IsHitTestVisible="False" Background="#DA817862">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=zanzarah:ZanzarahScrollViewer}, Path=IsEnabled}" Value="False">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>
                        </Grid>
                        <zanzarah:ZanzarahScrollBar x:Name="PART_VerticalScrollBar" Margin="6,0,0,0" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <zanzarah:ZanzarahScrollBar x:Name="PART_HorizontalScrollBar" Margin="0,6,0,0" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahSlider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahSlider">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="22" Tag="{Binding ElementName=PART_Track, Path=IsMouseOver}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="22"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="22"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                            <Border Background="Black" BorderBrush="{StaticResource ScrollBar.Background.Brush.Vertical}" BorderThickness="1"/>
                        </Border>
                        <Viewbox Grid.Row="0">
                            <zanzarah:ZanzarahArrowUpButton x:Name="PART_LineUpButton" Command="{x:Static Slider.IncreaseSmall}"
                                                            IsEnabled="{TemplateBinding IsMouseOver}" VerticalAlignment="Bottom"/>
                        </Viewbox>
                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" ViewportSize="NaN">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Width="18"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Width="18"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <zanzarah:ZanzarahSmallThumb x:Name="PART_Thumb" Margin="0,2"/>
                            </Track.Thumb>
                        </Track>
                        <Viewbox Grid.Row="2">
                            <zanzarah:ZanzarahArrowDownButton x:Name="PART_LineDownButton" Command="{x:Static Slider.DecreaseSmall}"
                                                              IsEnabled="{TemplateBinding IsMouseOver}" VerticalAlignment="Top"/>
                        </Viewbox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="zanzarah:ZanzarahSlider">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Height="22" IsHitTestVisible="True" Tag="{Binding ElementName=PART_Track, Path=IsMouseOver}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="22"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="22"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="1" BorderBrush="Black" BorderThickness="1" IsHitTestVisible="True">
                                    <Border Background="Black" BorderBrush="{StaticResource ScrollBar.Background.Brush.Horizontal}" BorderThickness="1" IsHitTestVisible="True"/>
                                </Border>
                                <Viewbox Grid.Column="0">
                                    <zanzarah:ZanzarahArrowLeftButton x:Name="PART_LineLeftButton" Command="{x:Static Slider.DecreaseSmall}"
                                                                      IsEnabled="{TemplateBinding IsMouseOver}" HorizontalAlignment="Right"/>
                                </Viewbox>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}" ViewportSize="NaN">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Height="18"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Height="18"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <zanzarah:ZanzarahSmallThumb x:Name="PART_Thumb" Margin="2,0"/>
                                    </Track.Thumb>
                                </Track>
                                <Viewbox Grid.Column="2">
                                    <zanzarah:ZanzarahArrowRightButton x:Name="PART_LineRightButton" Command="{x:Static Slider.IncreaseSmall}"
                                                                       IsEnabled="{TemplateBinding IsMouseOver}" HorizontalAlignment="Left"/>
                                </Viewbox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type zanzarah:ZanzarahToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Down.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template" Value="{StaticResource Arrow.Down.Highlighted}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource Arrow.Down.Default}"/>
                <Setter Property="Foreground" Value="{StaticResource TextUnableBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="zanzarah:ZanzarahComboBox">
        <Style.Resources>
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4,1"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsKeyboardFocused" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Selection.Brush}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsKeyboardFocused" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Selection.Brush}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Selection.Brush}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsKeyboardFocused" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Selection.Brush}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsKeyboardFocused" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Selection.Brush}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsKeyboardFocused" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Selection.Brush}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahComboBox">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="dropDownBorder" Background="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                    <Border Background="Transparent" BorderBrush="Black" BorderThickness="1">
                                        <Border Background="Black" BorderBrush="White" BorderThickness="1" Padding="0,0,3,0">
                                            <zanzarah:ZanzarahScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </zanzarah:ZanzarahScrollViewer>
                                        </Border>
                                    </Border>
                                </Border>
                        </Popup>
                        <local:ZanzarahComboBoxToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahRadioButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahRadioButton">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="radioButtonControl" Template="{StaticResource RadioButton.Unchecked.Default}" Margin="0,0,6,0"/>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Unchecked.Highlighted}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Unchecked.Highlighted}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Unchecked.Default}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Default}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Highlighted}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Highlighted}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsEnabled" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Default}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahCheckBox">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahCheckBox">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="radioButtonControl" Template="{StaticResource RadioButton.Unchecked.Default}" Margin="0,0,6,0"/>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Unchecked.Highlighted}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Unchecked.Highlighted}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Unchecked.Default}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Default}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Highlighted}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Highlighted}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsEnabled" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Template" TargetName="radioButtonControl" Value="{StaticResource RadioButton.Checked.Default}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahListBox">
                    <Border x:Name="Bd" SnapsToDevicePixels="true">
                        <zanzarah:ZanzarahScrollViewer Background="{TemplateBinding Background}" Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </zanzarah:ZanzarahScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahListView">
        <Style.Resources>
            <Style TargetType="GridViewColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Grid>
                                <Border x:Name="HeaderBorder" Padding="3,0">
                                    <ContentPresenter x:Name="HeaderContent"
                                                          Margin="-5,0,0,0"
                                                          RecognizesAccessKey="True"
                                                          VerticalAlignment="Stretch"
                                                          HorizontalAlignment="Stretch"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-6,0">
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Width" Value="18" />
                                            <Setter Property="Background" Value="#D7C9A6">
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                                            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="White" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="Floating">
                        <Setter Property="Opacity" Value="0.7" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Canvas Name="PART_FloatingHeaderCanvas">
                                        <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" />
                                    </Canvas>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="Padding">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Border Name="HeaderBorder" BorderThickness="0,1,0,1">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="ListViewItem">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid x:Name="Border" SnapsToDevicePixels="true" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <GridViewRowPresenter VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{StaticResource Selection.Brush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{StaticResource Selection.Brush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border">
                        <zanzarah:ZanzarahScrollViewer>
                            <zanzarah:ZanzarahScrollViewer.Style>
                                <Style TargetType="ScrollViewer">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ScrollViewer">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>

                                                    <Grid>
                                                        <Border BorderBrush="Black" BorderThickness="1">
                                                            <DockPanel>
                                                                <Grid DockPanel.Dock="Top" Height="1">
                                                                    <Grid.Background>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFD6C7A3" Offset="0"/>
                                                                            <GradientStop Color="#FFD6C7A3" Offset="0.8"/>
                                                                            <GradientStop Color="White" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Grid.Background>
                                                                </Grid>
                                                                <Grid DockPanel.Dock="Bottom" Height="1">
                                                                    <Grid.Background>
                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                            <GradientStop Color="#FFF2F3F4" Offset="0"/>
                                                                            <GradientStop Color="#FF35332E" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Grid.Background>
                                                                </Grid>
                                                                <Grid DockPanel.Dock="Left" Width="1">
                                                                    <Grid.Background>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FFD6C7A3" Offset="0"/>
                                                                            <GradientStop Color="#FFF2F3F4" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Grid.Background>
                                                                </Grid>
                                                                <Grid DockPanel.Dock="Right" Width="1">
                                                                    <Grid.Background>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="White" Offset="0"/>
                                                                            <GradientStop Color="#FFD6C7A3" Offset="0.1818"/>
                                                                            <GradientStop Color="#FFD6C7A3" Offset="0.2727"/>
                                                                            <GradientStop Color="#FF8A816A" Offset="0.6363"/>
                                                                            <GradientStop Color="#FF35332E" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Grid.Background>
                                                                </Grid>
                                                                <Grid Background="#FF1A1A1A"/>
                                                            </DockPanel>
                                                        </Border>
                                                        <Grid Margin="2">
                                                            <DockPanel Margin="{TemplateBinding Padding}">
                                                                <zanzarah:ZanzarahScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="false">
                                                                    <zanzarah:ZanzarahScrollViewer.Template>
                                                                        <ControlTemplate TargetType="{x:Type zanzarah:ZanzarahScrollViewer}">
                                                                            <Border BorderThickness="0,0,0,1">
                                                                                <Border.BorderBrush>
                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                        <GradientStop Color="#FFD6C7A3" Offset="0"/>
                                                                                        <GradientStop Color="#FFD6C7A3" Offset="0.8"/>
                                                                                        <GradientStop Color="White" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Border.BorderBrush>
                                                                                <Grid x:Name="Grid">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="*"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                    </Grid.RowDefinitions>
                                                                                    <Grid Margin="{TemplateBinding Padding}">
                                                                                        <Grid Background="{TemplateBinding Background}"/>
                                                                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                                                                                        <Grid Background="#DA817862" IsHitTestVisible="False">
                                                                                            <Grid.Style>
                                                                                                <Style TargetType="{x:Type Grid}">
                                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type zanzarah:ZanzarahScrollViewer}}}" Value="False">
                                                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Grid.Style>
                                                                                        </Grid>
                                                                                    </Grid>
                                                                                    <zanzarah:ZanzarahScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Margin="6,0,0,0" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                                                    <zanzarah:ZanzarahScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Margin="0,6,0,0" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                                                </Grid>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </zanzarah:ZanzarahScrollViewer.Template>
                                                                    <GridViewHeaderRowPresenter Margin="2,0"
                                              Columns="{Binding Path=TemplatedParent.View.Columns,
                    RelativeSource={RelativeSource TemplatedParent}}"
                                              ColumnHeaderContainerStyle="{Binding
                    Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                    RelativeSource={RelativeSource TemplatedParent}}"
                                              ColumnHeaderTemplate="{Binding
                    Path=TemplatedParent.View.ColumnHeaderTemplate,
                    RelativeSource={RelativeSource TemplatedParent}}"
                                              ColumnHeaderTemplateSelector="{Binding 
                    Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                    RelativeSource={RelativeSource TemplatedParent}}"
                                              AllowsColumnReorder="{Binding
                    Path=TemplatedParent.View.AllowsColumnReorder,
                    RelativeSource={RelativeSource TemplatedParent}}"
                                              ColumnHeaderContextMenu="{Binding
                    Path=TemplatedParent.View.ColumnHeaderContextMenu,
                    RelativeSource={RelativeSource TemplatedParent}}"
                                              ColumnHeaderToolTip="{Binding
                    Path=TemplatedParent.View.ColumnHeaderToolTip,
                    RelativeSource={RelativeSource TemplatedParent}}"
                                              SnapsToDevicePixels="{TemplateBinding
                    SnapsToDevicePixels}" />
                                                                </zanzarah:ZanzarahScrollViewer>

                                                                <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Local"
                                        CanContentScroll="True"
                                        CanHorizontallyScroll="False"
                                        CanVerticallyScroll="False" />
                                                            </DockPanel>
                                                        </Grid>
                                                    </Grid>

                                                    <zanzarah:ZanzarahScrollBar x:Name="PART_HorizontalScrollBar" Margin="0,6,0,0"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Value="{TemplateBinding HorizontalOffset}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                                                    <zanzarah:ZanzarahScrollBar x:Name="PART_VerticalScrollBar" Margin="6,0,0,0"
                     Grid.Column="1"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Value="{TemplateBinding VerticalOffset}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </zanzarah:ZanzarahScrollViewer.Style>
                            <ItemsPresenter />
                        </zanzarah:ZanzarahScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahButton">
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahButton">
                    <Grid>
                        <ContentControl x:Name="buttonBackground" Template="{StaticResource ControlBackground.Default}"/>
                        <Grid Margin="4">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Margin}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Template" TargetName="buttonBackground" Value="{StaticResource ControlBackground.Blue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextUnableBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahTextBlock">
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>

    <Style TargetType="zanzarah:ZanzarahTextBox">
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Selection.Brush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahTextBox">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <zanzarah:ZanzarahScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="{TemplateBinding Background}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahRichTextBox">
        <Setter Property="AutoWordSelection" Value="False"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource DialogueBrush}"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Selection.Brush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahRichTextBox">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <zanzarah:ZanzarahScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="{TemplateBinding Background}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahCodeTextBox">
        <Setter Property="Width" Value="76"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MaxLength" Value="8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Selection.Brush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="zanzarah:ZanzarahCodeTextBox">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <zanzarah:ZanzarahScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="{TemplateBinding Background}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="zanzarah:ZanzarahMenuItem">
        <Style.Resources>
            <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

            <Style x:Key="MenuScrollViewer" TargetType="zanzarah:ZanzarahScrollViewer" BasedOn="{x:Null}">
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            </Style>

            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="2" />
                <Setter Property="Margin" Value="0,4,0,4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderThickness="1" BorderBrush="{StaticResource TextBrush}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- TopLevelHeader -->
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border">
                    <Grid>
                        <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                        <Popup x:Name="Popup" Placement="Bottom"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               AllowsTransparency="True"
                               Focusable="False" PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{DynamicResource MenuPopupBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <zanzarah:ZanzarahScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </zanzarah:ZanzarahScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource Selection.Brush}"/>
                    </Trigger>
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource TextUnableBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- TopLevelItem -->
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border">
                    <Grid>
                        <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource Selection.Brush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource TextUnableBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- SubmenuItem -->
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
                <Border x:Name="Border" BorderThickness="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                        <Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="CheckMark"
                                  Width="7" Height="7"
                                  Visibility="Hidden"
                                  SnapsToDevicePixels="False"
                                  StrokeThickness="2"
                                  Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Path.Stroke>
                            </Path>
                        </Border>
                        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                        <TextBlock x:Name="InputGestureText"
                                   Grid.Column="2"
                                   Text="{TemplateBinding InputGestureText}"
                                   Margin="5,2,0,2"
                                   DockPanel.Dock="Right" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource Selection.Brush}"/>
                        <Setter Property="BorderBrush" TargetName="Border" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource TextUnableBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border" BorderThickness="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                        <zanzarah:ZanzarahTextBlock x:Name="InputGestureText"
                                                    Grid.Column="2"
                                                    Text="{TemplateBinding InputGestureText}"
                                                    Margin="5,2,2,2"
                                                    DockPanel.Dock="Right" />
                        <Path Grid.Column="3" Fill="{StaticResource TextBrush}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 0 7 L 4 3.5 Z">
                        </Path>
                        <Popup x:Name="Popup"
                               Placement="Right"
                               HorizontalOffset="-4"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder"
                                    SnapsToDevicePixels="True"
                                    Background="{DynamicResource MenuPopupBrush}"
                                    BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <zanzarah:ZanzarahScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </zanzarah:ZanzarahScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource Selection.Brush}"/>
                        <Setter Property="BorderBrush" TargetName="Border" Value="Transparent"/>
                    </Trigger>
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource TextUnableBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
